/* CSS Reset */

*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  margin: 0;
}

html {
  font-size: 62.5%;
}

body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  font-size: 1.6rem;
}

img,
picture,
video,
canvas,
svg,
iframe {
  display: block;
  max-inline-size: 100%;
  block-size: auto;
}

input,
button,
textarea,
select {
  font: inherit;
}

p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/* Variables */

:root {
  /* Colors */
  --color-scissors: hsl(39, 89%, 49%);
  --color-scissors-gradient: linear-gradient(hsl(40, 84%, 53%), var(--color-scissors));
  --color-paper: hsl(230, 89%, 62%);
  --color-paper-gradient: linear-gradient(hsl(230, 89%, 65%), var(--color-paper));
  --color-rock: hsl(349, 71%, 52%);
  --color-rock-gradient: linear-gradient(hsl(349, 70%, 56%), var(--color-rock));
  --color-lizard: hsl(261, 73%, 60%);
  --color-lizard-gradient: linear-gradient(hsl(261, 72%, 63%), var(--color-lizard));
  --color-spock: hsl(189, 59%, 53%);
  --color-spock-gradient: linear-gradient(hsl(189, 58%, 57%), var(--color-spock));

  --color-dark-text: hsl(229, 25%, 31%);
  --color-score-text: hsl(229, 64%, 46%);
  --color-header-outline: hsl(217, 16%, 45%);

  --color-radial-gradient-start: hsl(214, 47%, 23%);
  --color-radial-gradient-end: hsl(237, 49%, 15%);
}

body {
  font-family: 'Barlow Semi Condensed', sans-serif;
  font-weight: 600;
  font-style: normal;
  background: radial-gradient(
    circle at center top in hsl,
    var(--color-radial-gradient-start),
    var(--color-radial-gradient-end)
  );
  min-block-size: 100dvh;
}

main {
  overflow-x: clip;
  padding: 46px 3rem 6rem;
}

button {
  cursor: pointer;
  border: none;
}

.invisible {
  display: none;
}

header {
  display: flex;
  justify-content: space-between;
  border: 3px solid var(--color-header-outline);
  max-inline-size: 704px;
  margin-inline: auto;
  padding: 1.7rem 2.3rem 1.6rem 2.9rem;
  border-radius: 16px;
}

header > img {
  position: relative;
  top: 4px;
}

.score-card {
  background-color: white;
  min-inline-size: 150px;
  border-radius: 8px;
  text-align: center;
  text-transform: uppercase;
  padding-block-start: 1.2rem;
  font-size: 1.8rem;
  letter-spacing: 1.4px;
  color: var(--color-score-text);
}

#score {
  display: block;
  font-size: 6.5rem;
  line-height: 0.9;
  font-weight: 700;
  letter-spacing: -0.5px;
  color: var(--color-dark-text);
}

.buttons-group {
  max-inline-size: 475px;
  block-size: 465px;
  margin-inline: auto;
  background-image: url(images/bg-pentagon.svg);
  background-repeat: no-repeat;
  background-position: center;
  margin-block-start: 46px;
  position: relative;
}

.buttons-group button {
  position: absolute;
}

.choice {
  --circle-size: 145px;
  --scale-buttons: 1;
  border-radius: 50%;
  block-size: calc(var(--circle-size) + 3px);
  inline-size: var(--circle-size);
  box-shadow: inset 0 -6px rgba(0, 0, 0, 0.2);
  transition: transform ease-in 50ms, outline ease-in 0.2s;
}

.choice:hover,
.choice:focus-visible {
  transform: scale(1.1);
  outline-width: 6px;
  outline-offset: 6px;
  outline-style: dotted;
  outline-color: currentColor;
}

.choice::before {
  --thickness: 16px;
  content: '';
  position: absolute;
  inset-inline-start: var(--thickness);
  inset-block-start: var(--thickness);
  block-size: calc(var(--circle-size) - 2 * var(--thickness));
  inline-size: calc(var(--circle-size) - 2 * var(--thickness));
  border-radius: 50%;
  box-shadow: inset 0 6px rgba(0, 0, 0, 0.15);
  background: var(--background-image), linear-gradient(#dadada, #fcf4e9);
  background-position: var(--background-image-position), center;
  background-repeat: no-repeat;
  --background-image-position: center;
}

.scissors {
  --background-image: url(images/icon-scissors.svg);
  background: var(--color-scissors-gradient);
  color: var(--color-scissors);
}

button.scissors {
  inset-inline-start: 34%;
  transform: scale(var(--scale-buttons));
}

.spock {
  --background-image: url(images/icon-spock.svg);
  background: var(--color-spock-gradient);
  color: var(--color-spock);
}

button.spock {
  inset-block-start: 28%;
}

.paper {
  --background-image: url(images/icon-paper.svg);
  background: var(--color-paper-gradient);
  color: var(--color-paper);
}

button.paper {
  inset-inline-end: 0;
  inset-block-start: 28%;
}

.lizard {
  --background-image: url(images/icon-lizard.svg);
  background: var(--color-lizard-gradient);
  color: var(--color-lizard);
}

button.lizard {
  inset-inline-start: 14%;
  inset-block-end: 0;
}

.rock {
  --background-image: url(images/icon-rock.svg);
  background: var(--color-rock-gradient);
  color: var(--color-rock);
}

button.rock {
  inset-inline-end: 14%;
  inset-block-end: 0;
}

#rules-button {
  position: absolute;
  inset-inline-end: 3.1rem;
  inset-block-end: 3.1rem;
  text-transform: uppercase;
  background-color: transparent;
  color: white;
  padding: 0.7rem 3.7rem;
  border: 2px solid var(--color-header-outline);
  border-radius: 8px;
  letter-spacing: 2px;
}

#rules-button:hover,
#rules-button:focus-visible {
  box-shadow: 0px 0px 16px 0px white;
  outline: none;
}

dialog.rules {
  inset: 50%;
  transform: translate(-50%, -50%);
  block-size: 461px;
  inline-size: 400px;
  border: none;
  border-radius: 10px;
  padding: 2.6rem 3.2rem;
}

dialog.rules .container {
  display: flex;
  flex-direction: column;
  gap: 1.1rem;
}

dialog.rules::backdrop {
  background-color: rgba(0, 0, 0, 0.5);
}

dialog.rules h2 {
  font-size: 3.2rem;
  text-transform: uppercase;
  color: var(--color-dark-text);
}

dialog.rules img {
  --pixel-perfect-size: 101%;
  inline-size: var(--pixel-perfect-size);
  max-inline-size: 50dvh;
}

dialog.rules button[type='submit'] {
  background-image: url(images/icon-close.svg);
  background-repeat: no-repeat;
  background-position: center;
  background-color: transparent;
  position: absolute;
  inset-inline-end: 2.6rem;
  inset-block-start: 3.3rem;
  block-size: 3rem;
  inline-size: 3rem;
}

.fight {
  max-inline-size: 760px;
  margin-inline: auto;
  margin-block-start: 70px;
  display: grid;
  grid-template: 1fr 420px / 1fr 1fr;
  justify-items: center;
  align-items: center;
  grid-template-areas:
    'you-picked house-picked'
    'user-choice house-choice';
}

.fight .user-choice {
  position: relative;
  transform: scale(2);
  grid-area: user-choice;
}

.fight .house-choice {
  --size: 225px;
  block-size: var(--size);
  inline-size: var(--size);
  background-color: rgba(0, 0, 0, 0.1);
  border-radius: 50%;
  grid-area: house-choice;
}

.fight .house-choice.choice {
  position: relative;
  block-size: calc(var(--circle-size) + 3px);
  inline-size: var(--circle-size);
  transform: scale(2);
}

.fight p {
  font-size: 2.4rem;
  text-transform: uppercase;
  color: white;
  letter-spacing: 3px;
}

.fight p.you-picked {
  grid-area: you-picked;
}

.fight p.house-picked {
  grid-area: house-picked;
}

/* Showing fight result */

.fight.results {
  max-inline-size: 920px;
  margin-inline: auto;
  margin-block-start: 70px;
  display: grid;
  grid-template: 1fr 420px / 1fr 1fr 1fr;
  justify-items: center;
  align-items: center;
  grid-template-areas:
    'you-picked . house-picked'
    'user-choice result house-choice';
}

.result {
  display: flex;
  grid-area: result;
  min-block-size: 247px;
  flex-direction: column;
  justify-content: center;
}

#result-label {
  font-size: 5.6rem;
  font-weight: 700;
  letter-spacing: 0px;
  margin-block-end: 1.2rem;
}

.play-again {
  display: block;
  text-transform: uppercase;
  inline-size: 100%;
  padding: 1.2rem;
  color: var(--color-dark-text);
  border-radius: 8px;
  letter-spacing: 2.5px;
}

.winner::after {
  --winner-radius: 108px;
  --button-width: calc(var(--circle-size) / 2);
  --shadow-full-width: calc(100% + 2 * var(--winner-radius));
  content: '';
  position: absolute;
  inset-inline-start: calc(50% - var(--shadow-full-width) / 2);
  inset-block-start: calc(50% - var(--shadow-full-width) / 2);
  block-size: var(--shadow-full-width);
  inline-size: var(--shadow-full-width);
  border-radius: 50%;
  pointer-events: none;
  background: radial-gradient(
    transparent var(--button-width),
    rgb(255 255 255 / 5%) var(--button-width),
    rgb(255 255 255 / 8%) 40%,
    rgb(255 255 255 / 3%) 40%,
    rgb(255 255 255 / 6%) 55%,
    rgb(255 255 255 / 2%) 55%
  );
}

/* Responsive */

@media screen and (max-width: 950px) {
  main {
    padding: 3rem 3rem 6rem;
  }

  header {
    border-radius: 6px;
    padding: 1rem 1.1rem;
  }

  header > img {
    max-block-size: 5rem;
    margin: 0.9rem 1rem;
  }

  .score-card {
    min-inline-size: 80px;
    border-radius: 4px;
    padding-block: 1rem;
    font-size: 1rem;
    line-height: 1;
  }

  #score {
    font-size: 4rem;
    line-height: 1.1;
  }

  .buttons-group {
    margin-block-start: 140px;
    max-inline-size: 200px;
    block-size: auto;
    aspect-ratio: 1;
    background-size: 100%;
    margin-block-end: 18.3rem;
  }

  button.scissors {
    inset-inline-start: 17%;
    inset-block-start: -33%;
  }

  button.spock {
    inset-inline-start: -37%;
    inset-block-start: 8%;
  }

  button.paper {
    inset-inline-end: -37%;
    inset-block-start: 9%;
  }

  button.lizard {
    inset-inline-start: -16%;
    inset-block-end: -39%;
  }

  button.rock {
    inset-inline-end: -16%;
    inset-block-end: -40%;
  }

  .choice {
    --circle-size: 135px;
    block-size: calc(var(--circle-size) + 3px);
    inline-size: var(--circle-size);
    --scale-buttons: 0.7;
    transform: scale(var(--scale-buttons));
  }

  .choice:hover,
  .choice:focus-visible {
    transform: scale(calc(var(--scale-buttons) + 0.1));
  }

  #rules-button {
    display: block;
    margin-inline: auto;
    position: static;
  }

  .fight {
    margin-block-start: 80px;
    grid-template: 170px 2.6rem / 1fr 1fr;
    grid-template-areas:
      'user-choice house-choice'
      'you-picked house-picked';
  }

  .fight .user-choice,
  .fight .house-choice.choice {
    --scale-buttons: 1;
    transform: scale(var(--scale-buttons));
  }

  .fight .house-choice {
    --size: 125px;
  }

  .fight p {
    font-size: 1.6rem;
    letter-spacing: 2px;
    text-align: center;
  }

  dialog.rules {
    inset: 0;
    transform: unset;
    border-radius: 0;
    max-width: none;
    max-height: none;
    block-size: 100%;
    inline-size: 100%;
    margin-block: 0;
    padding-inline: 3.2rem;
    padding-block: 0;
  }

  dialog.rules .container {
    justify-content: center;
    align-items: center;
    block-size: 100vh;
    gap: unset;
  }

  dialog.rules .container > h2,
  dialog.rules .container > form {
    flex-grow: 1;
    flex-basis: 50%;
  }

  dialog.rules h2 {
    text-align: center;
    position: relative;
    inset-block-start: 9rem;
  }

  dialog.rules button[type='submit'] {
    inset-inline-start: 50%;
    transform: translateX(-50%);
    inset-block-start: unset;
    inset-block-end: 6rem;
  }

  .fight.results {
    max-inline-size: 100%;
    margin-block-start: 80px;
    grid-template: 170px 2.6rem 1fr / 1fr 1fr;
    justify-items: center;
    align-items: center;
    grid-template-areas:
      'user-choice house-choice'
      'you-picked house-picked'
      'result result';
  }

  #result-label {
    margin-block-end: 0.4rem;
    text-align: center;
  }

  .play-again {
    inline-size: 22rem;
  }
}

@media screen and (max-width: 360px) {
  .fight .user-choice,
  .fight .house-choice.choice {
    --scale-buttons: 0.8;
  }
}
